import numpy as np
import pandas as pd
import math
import os

def synthesize_bangladesh_tannery(n_samples=6000):
    """
    Generates synthetic time-series data mimicking tannery effluent readings 
    in Bangladesh, including location and temporal variability (seasonality).
    
    The data includes input features (pH, DO, TSS, Conductivity, Turbidity)
    and target features (BOD, COD, TDS).
    """
    rng = np.random.default_rng(2025)
    # Common tannery site locations
    sites = [
        {"site":"Savar_CETP","lat":23.85,"lon":90.25},
        {"site":"Hazaribagh_Outlet","lat":23.72,"lon":90.41},
        {"site":"Buriganga_Upstream","lat":23.70,"lon":90.39},
        {"site":"Rural_Tannery","lat":24.0,"lon":90.15}
    ]
    
    rows = []
    for i in range(n_samples):
        site = rng.choice(sites)
        timestamp = pd.Timestamp("2018-01-01") + pd.Timedelta(hours=int(i * 4))
        doy = timestamp.dayofyear # Day of year for seasonality
        
        # Seasonality: Pollution peaks in the drier season
        season_multiplier = 1.0 + 0.5 * math.cos(2 * math.pi * (doy / 365.0 + 0.1)) 
        
        # --- Input Features ---
        pH = float(np.clip(8.8 + rng.normal(0, 0.8), 5.5, 12.0)) # Typically alkaline
        DO = float(np.clip(1.5 / season_multiplier + rng.normal(0, 0.8), 0.01, 8.0)) # Low DO in high-pollution periods
        
        # --- Target Features (BOD, COD, TDS) ---
        BOD_base = 600 * season_multiplier
        COD_base = 1800 * season_multiplier
        TDS_base = 3000 * season_multiplier

        BOD = float(np.clip(BOD_base + rng.normal(0, BOD_base * 0.5), 10.0, 10000.0))
        COD = float(np.clip(COD_base + rng.normal(0, COD_base * 0.5), BOD + 10, 25000.0))
        TDS = float(np.clip(TDS_base + rng.normal(0, TDS_base * 0.4), 100.0, 12000.0))
        
        # --- Other Correlated Features ---
        TSS = float(np.clip(BOD * 1.5 + rng.normal(0, 500), 10.0, 5000.0))
        conductivity = float(np.clip(TDS / (0.7 + rng.normal(0, 0.05)) + rng.normal(0, 200), 50.0, 30000.0))
        turbidity = float(np.clip(TSS * 1.5 + rng.normal(0, 500), 1.0, 5000.0))

        rows.append({
            "timestamp": timestamp,
            "site_id": site["site"],
            "lat": site["lat"],
            "lon": site["lon"],
            "pH": pH,
            "BOD": BOD,
            "COD": COD,
            "TDS": TDS,
            "DO": DO,
            "TSS": TSS,
            "conductivity": conductivity,
            "turbidity": turbidity
        })
        
    df = pd.DataFrame(rows)
    return df

if __name__ == "__main__":
    df = synthesize_bangladesh_tannery(n_samples=6000)
    filename = 'tannery_data_synthesized.csv'
    df.to_csv(filename, index=False)
    print(f"Synthetic data saved to {filename} with {len(df)} records.")
